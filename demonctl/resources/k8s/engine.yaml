---
apiVersion: v1
kind: Service
metadata:
  name: demon-engine
  namespace: {{ .namespace }}
  labels:
    app.kubernetes.io/name: demon-engine
    app.kubernetes.io/component: engine
    app.kubernetes.io/part-of: demon
spec:
  selector:
    app.kubernetes.io/name: demon-engine
  ports:
    - name: http
      port: 8081
      targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demon-engine
  namespace: {{ .namespace }}
  labels:
    app.kubernetes.io/name: demon-engine
    app.kubernetes.io/component: engine
    app.kubernetes.io/part-of: demon
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: demon-engine
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demon-engine
        app.kubernetes.io/component: engine
        app.kubernetes.io/part-of: demon
      {{- if .networking.serviceMesh.enabled }}
      annotations:
        sidecar.istio.io/inject: "true"
      {{- end }}
    spec:
      containers:
      - name: engine
        image: ghcr.io/afewell-hh/demon-engine:main
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: NATS_URL
          value: "{{ .natsUrl }}"
        - name: STREAM_NAME
          value: "{{ .streamName }}"
        - name: SUBJECTS
          value: "{{ .subjects | join "," }}"
        - name: DEDUPE_WINDOW_SECS
          value: "{{ .dedupeWindowSecs }}"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"