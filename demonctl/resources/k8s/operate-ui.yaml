---
apiVersion: v1
kind: Service
metadata:
  name: operate-ui
  namespace: {{ .namespace }}
  labels:
    app.kubernetes.io/name: operate-ui
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: demon
spec:
  selector:
    app.kubernetes.io/name: operate-ui
  ports:
    - name: http
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operate-ui
  namespace: {{ .namespace }}
  labels:
    app.kubernetes.io/name: operate-ui
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: demon
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: operate-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: operate-ui
        app.kubernetes.io/component: ui
        app.kubernetes.io/part-of: demon
      {{- if .networking.serviceMesh.enabled }}
      annotations:
        sidecar.istio.io/inject: "true"
      {{- end }}
    spec:
      containers:
      - name: ui
        image: ghcr.io/demon-project/operate-ui:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NATS_URL
          value: "{{ .natsUrl }}"
        - name: STREAM_NAME
          value: "{{ .streamName }}"
        - name: API_BASE_URL
          value: "http://demon-engine.{{ .namespace }}.svc.cluster.local:8081"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"