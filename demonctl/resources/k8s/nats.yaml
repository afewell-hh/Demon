---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: {{ .namespace }}
  labels:
    app.kubernetes.io/name: nats
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: demon
spec:
  selector:
    app.kubernetes.io/name: nats
  ports:
    - name: client
      port: 4222
      targetPort: 4222
    - name: monitor
      port: 8222
      targetPort: 8222
    - name: routing
      port: 6222
      targetPort: 6222
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  namespace: {{ .namespace }}
  labels:
    app.kubernetes.io/name: nats
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: demon
spec:
  serviceName: nats
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nats
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nats
        app.kubernetes.io/component: messaging
        app.kubernetes.io/part-of: demon
    spec:
      containers:
      - name: nats
        image: nats:2.10-alpine
        args:
          - "-js"
          - "-sd"
          - "/data"
          - "-m"
          - "8222"
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 8222
          name: monitor
        - containerPort: 6222
          name: routing
        volumeMounts:
        - name: data
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /varz
            port: 8222
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /varz
            port: 8222
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
{{- if .persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ .persistence.storageClass }}
      resources:
        requests:
          storage: {{ .persistence.size }}
{{- else }}
      volumes:
      - name: data
        emptyDir: {}
{{- end }}