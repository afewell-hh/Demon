name: K8s Bootstrapper Smoke (Scheduled)

on:
  schedule:
    # Daily at 02:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch: {}

jobs:
  resolve-digests:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    outputs:
      digest-json: ${{ steps.fetch.outputs.digest-json }}
      operate-ui-tag: ${{ steps.fetch.outputs.operate-ui-tag }}
      runtime-tag: ${{ steps.fetch.outputs.runtime-tag }}
      engine-tag: ${{ steps.fetch.outputs.engine-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (pinned toolchain)
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.82.0

      - name: Cache cargo registry + target
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
          cache-on-failure: true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Install demonctl CLI
        run: cargo install --path demonctl --locked --force

      - name: Fetch docker image digests with demonctl
        id: fetch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEMONCTL_GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          set -euo pipefail
          BIN="$HOME/.cargo/bin/demonctl"
          MANIFEST_PATH="$RUNNER_TEMP/docker-image-digests.json"
          ENV_EXPORTS="$($BIN docker digests fetch --format env --output "$MANIFEST_PATH")"

          eval "$ENV_EXPORTS"

          digest_json=$(jq -c . "$MANIFEST_PATH")
          echo "digest-json=$digest_json" >> "$GITHUB_OUTPUT"
          echo "operate-ui-tag=$OPERATE_UI_IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "runtime-tag=$RUNTIME_IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "engine-tag=$ENGINE_IMAGE_TAG" >> "$GITHUB_OUTPUT"

          {
            echo "### Resolved docker-build manifest"
            echo ""
            jq -r 'to_entries | ("| Component | Image |"), ("| --- | --- |"), (.[] | "| " + .key + " | `" + .value.image + "` |")' "$MANIFEST_PATH"
          } >> "$GITHUB_STEP_SUMMARY"

  k8s-bootstrapper-smoke-full:
    runs-on: ubuntu-latest
    needs: resolve-digests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (pinned toolchain)
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.82.0

      - name: Cache cargo registry + target
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
          cache-on-failure: true

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | sudo TAG=v5.4.6 bash

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Build workspace
        run: cargo build --workspace

      - name: Export GHCR image tags for smoke test
        run: |
          {
            echo "OPERATE_UI_IMAGE_TAG=${{ needs.resolve-digests.outputs.operate-ui-tag }}"
            echo "RUNTIME_IMAGE_TAG=${{ needs.resolve-digests.outputs.runtime-tag }}"
            echo "ENGINE_IMAGE_TAG=${{ needs.resolve-digests.outputs.engine-tag }}"
          } >> "$GITHUB_ENV"

          {
            echo "### Scheduled smoke image digests"
            echo ""
            echo "| Component | Image |"
            echo "| --- | --- |"
            echo "| operate-ui | \\`${{ needs.resolve-digests.outputs.operate-ui-tag }}\\` |"
            echo "| runtime | \\`${{ needs.resolve-digests.outputs.runtime-tag }}\\` |"
            echo "| engine | \\`${{ needs.resolve-digests.outputs.engine-tag }}\\` |"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Run full k8s bootstrapper smoke test
        env:
          # Set test environment variables
          GITHUB_TOKEN: test-token-value
          ADMIN_TOKEN: test-admin-token
          DATABASE_URL: postgresql://localhost/demon_test
          NATS_PASSWORD: test-nats-password
          JWT_SECRET: test-jwt-secret-12345
        run: |
          make bootstrap-smoke ARGS="--cleanup --verbose"

      - name: Upload smoke test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: k8s-bootstrapper-smoke-nightly-${{ github.run_number }}
          path: dist/bootstrapper-smoke/
          retention-days: 30

      - name: Generate summary
        if: always()
        run: |
          echo "## K8s Bootstrapper Smoke Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "**Run ID:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ $? -eq 0 ]]; then
            echo "✅ **Status:** PASSED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Cluster provisioning completed" >> $GITHUB_STEP_SUMMARY
            echo "- Bootstrap deployment successful" >> $GITHUB_STEP_SUMMARY
            echo "- Health checks passed" >> $GITHUB_STEP_SUMMARY
            echo "- Artifacts captured and cleanup completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status:** FAILED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the uploaded artifacts for detailed logs and cluster state." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Artifacts:** Available as 'k8s-bootstrapper-smoke-nightly-${{ github.run_number }}'" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next scheduled run:** $(date -d 'tomorrow 02:00 UTC' -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
