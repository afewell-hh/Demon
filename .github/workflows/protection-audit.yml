name: protection-audit

on:
  workflow_dispatch:
  schedule:
    - cron: "17 3 * * *"  # daily at 03:17 UTC

jobs:
  audit:
    # Skip in forks or repos without the secret to avoid noisy failures
    if: ${{ secrets.PROTECTION_TOKEN != '' }}
    runs-on: ubuntu-latest
    # Uses a PAT because GITHUB_TOKEN often lacks repo-admin read for branch protection in orgs.
    # PAT scope: Repository permissions -> Administration: Read-only (repo-scoped, fine-grained).
    env:
      GH_TOKEN: ${{ secrets.PROTECTION_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Verify required protection settings
        shell: bash
        run: |
          set -euo pipefail
          gh api repos/:owner/:repo/branches/main/protection -q '.required_status_checks.contexts | sort' | jq .

          # Assert required checks present
          REQ1='Bootstrapper bundles — verify (offline, signature ok)'
          REQ2='Bootstrapper bundles — negative verify (tamper ⇒ failed)'
          REQ3='review-lock-guard'
          MAP=$(gh api repos/:owner/:repo/branches/main/protection -q '.required_status_checks.contexts')
          echo "$MAP" | jq -e "index(\"$REQ1\")" >/dev/null
          echo "$MAP" | jq -e "index(\"$REQ2\")" >/dev/null
          echo "$MAP" | jq -e "index(\"$REQ3\")" >/dev/null

          # Assert CODEOWNERS gate
          gh api repos/:owner/:repo/branches/main/protection -q '.required_pull_request_reviews.require_code_owner_reviews' | grep -qx true
